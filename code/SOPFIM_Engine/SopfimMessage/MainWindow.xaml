<Window x:Class="SopfimMessage.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:CustomControls="clr-namespace:Sopfim.CustomControls;assembly=Sopfim.CustomControls"
        xmlns:Converters="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=WPFToolkit.Extended"
        WindowStyle="ThreeDBorderWindow"
        Title="SOPFIM - Suivi Message" Height="350" Width="525" WindowState="Maximized"
        Icon="/SopfimMessage;component/Images/Large/SOPFIM.png" Margin="2,0">
    <Grid>
        <Grid.Resources>
            <Converters:InverseBoolConverter x:Key="_inverseConverter" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="300" />
        </Grid.RowDefinitions>
        <CustomControls:MapControl x:Name="_mapControl" MapLoaded="_mapControl_MapLoaded"/>
        <GridSplitter x:Name="SplitterHor"
                ResizeDirection="Rows" 
                ResizeBehavior="BasedOnAlignment" 
                ShowsPreview="True" 
                Background="#FF778899" 
                Height="2" Margin="0,1,0,1" 
                VerticalAlignment="Center" 
                HorizontalAlignment="Stretch" 
                Grid.Row="1"  DragIncrement="10" />
        <Grid Name="_dataPart"  Grid.Row="2" DataContext="{Binding DataViewModel}">
            <Grid.RowDefinitions>
                <RowDefinition Height="80" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid x:Name="_editButtonPanel" Grid.Column="0">
                <Grid.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource _editButtonStyle}">
                        
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" x:Name="_editPanelTop" VerticalAlignment="Bottom">
                    <Button  Command="{Binding NewMessage}" ToolTip="Nouveau message">Nouveau</Button>
                    <Button>Synchroniser</Button>
                    <Button>
                        <TextBlock TextAlignment="Center">Envoyer
                        <LineBreak/> un avis</TextBlock>
                    </Button>

                </StackPanel>
                <StackPanel Orientation="Horizontal" x:Name="_editPanelBottom" VerticalAlignment="Bottom" Grid.Row="1">
                    <Button Command="{Binding BeginEdit}">Éditer</Button>
                    <Button Command="{Binding SaveEdit}">
                        <TextBlock TextAlignment="Center">Enregistrer
                        <LineBreak/> Local</TextBlock>
                    </Button>
                    <Button Command="{Binding CancelEdit}">Annuler</Button>
                </StackPanel>


            </Grid>

            <Grid Grid.Column="1" x:Name="_rightSidePart">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid x:Name="_messageNumberPanel">
                        <Border BorderBrush="Black" Grid.Column="1" BorderThickness="1" Background="AliceBlue">
                            <StackPanel Orientation="Horizontal" x:Name="_messageNumberStack">
                                <Button VerticalAlignment="Center" ToolTip="Ouvrir deriner message" 
                                    Margin="7,0,0,0" Command="{Binding OpenLastMessage}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Dernier Message #: " VerticalAlignment="Bottom" Style="{StaticResource _filterTextBlock}" ToolTip="Ouvrir dernier message" />
                                        <TextBlock Text="{Binding LastMessageNumber}" Margin="7,0,17,0" VerticalAlignment="Bottom" Style="{StaticResource _filterTextBlock}" />
                                    </StackPanel>
                                </Button>
                                <TextBlock Text="Message # en cours" Style="{StaticResource _filterTextBlock}" Margin="25,0,0,0"/>
                                <TextBox Text="{Binding MessageNumber}" Width="50"  Style="{StaticResource _generalControl}" />
                                <TextBlock Text="Date du message" Style="{StaticResource _filterTextBlock}" Margin="25,0,0,0" />
                                <CustomControls:DatePickerAmpm  x:Name="_messageDateSelector" SelectedDateTime="{Binding MessageSelectedDate, Mode=OneWay}"
                                                Width="150" Margin="15,0,0,0" VerticalAlignment="Center" IsEnabled="False"/>
                                
                        </StackPanel>
                        </Border>

                    </Grid>

                <StackPanel x:Name="_filterPanel" Orientation="Horizontal" Grid.Row="1">
                    <TextBlock Text="Base d'opération"  Style="{StaticResource _filterTextBlock}"/>
                    <ComboBox x:Name="_operationSelector" ItemsSource="{Binding RelativeSource={RelativeSource  AncestorType={x:Type Window}}, Path=DataContext.BaseOperationValues}" 
                              SelectedValuePath="Code" DisplayMemberPath="Description" 
                              SelectedValue="{Binding BaseOperation}" Width="110" 
                    Style="{StaticResource _generalControl}"  />
                    <TextBlock Text="Type bloc"  Style="{StaticResource _filterTextBlock}"/>
                    <ComboBox x:Name="_blocTypeSelector" ItemsSource="{Binding RelativeSource={RelativeSource  AncestorType={x:Type Window}}, Path=DataContext.BlocTypeValues}" SelectedValuePath="Code" DisplayMemberPath="Description" SelectedValue="{Binding BlocType}" 
                     Style="{StaticResource _generalControl}" Width="110"/>
                    <TextBlock Text="No Bloc"  Style="{StaticResource _filterTextBlock}" />
                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource  AncestorType={x:Type Window}}, Path=DataContext.BlocNumberValues}" 
                              SelectedValuePath="Code" DisplayMemberPath="Description" 
                              SelectedValue="{Binding BlocNumber}" Width="110" 
                    Style="{StaticResource _generalControl}"  />

                    <TextBlock Text="Largeur"  Style="{StaticResource _filterTextBlock}" />
                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource  AncestorType={x:Type Window}}, Path=DataContext.LargeurValues}" SelectedValuePath="Code" 
                          DisplayMemberPath="Description" SelectedValue="{Binding Largeur}" 
                     Style="{StaticResource _generalControl}" Width="110" />
                </StackPanel>

            </Grid>
                

            
            <DataGrid Name="_tabularData" ItemsSource="{Binding DataList}" AutoGenerateColumns="False" Margin="5"
                  IsReadOnly="{Binding IsReadOnly}" Grid.Row="1" Grid.ColumnSpan="2" Height="Auto"  
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          AlternationCount="2" AlternatingRowBackground="#EFF8FB" HorizontalAlignment="Left"
                          RowHeight="25" ColumnHeaderStyle="{StaticResource _datagridColumnHeader}"
                      RowHeaderStyle="{StaticResource _datagridRowHeader}" 
                      BorderBrush="{Binding IsReadOnly, Converter={StaticResource _gridConverter}}" 
                      BorderThickness="{Binding IsReadOnly, Converter={StaticResource _gridThicknessConverter}}"
                      SelectedItem="{Binding SelectedRecord, Mode=TwoWay}" CurrentCellChanged="_tabularData_CurrentCellChanged">
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Copy" Command="{Binding SplitMessage}" IsEnabled="{Binding IsReadOnly, Converter={StaticResource _inverseConverter}}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="L">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Command="{Binding RelativeSource={RelativeSource  AncestorType={x:Type Grid}, AncestorLevel=2}, Path=DataContext.Locate}"
                           CommandParameter="{Binding NoBloc}" Width="25" Height="24" Margin="0">
                                    <Image Source="/SopfimMessage;component/Images/Large/filefind.png" Width="25" Height="24" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="*" Binding="{Binding IsDirty, Converter={StaticResource _isDirtyConverter}}" 
                                        Width="30" IsReadOnly="True" ElementStyle="{StaticResource _boldData}">
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="No Bloc" Binding="{Binding NoBloc}" Width="60" IsReadOnly="True"/>
                    <CustomControls:BindableDatagridComboBoxColumn Header="Timing IDI" SelectedValueBinding="{Binding TimingIDI}" Width="80" 
                          ItemsSource="{Binding RelativeSource={RelativeSource  AncestorType={x:Type Window}}, Path=DataContext.TimingValues}" SelectedValuePath="Code" DisplayMemberPath="Description"/>
                    <DataGridTextColumn Header="Larves Br" Binding="{Binding LarvesBr}"  Width="80"/>
                    <CustomControls:BindableDatagridComboBoxColumn Header="Produit" SelectedValueBinding="{Binding Produit}" Width="100" 
                          ItemsSource="{Binding RelativeSource={RelativeSource  AncestorType={x:Type Window}}, Path=DataContext.ProduitValues}" 
                          SelectedValuePath="Code" DisplayMemberPath="Description"/>
                    <CustomControls:BindableDatagridComboBoxColumn Header="Prescription" SelectedValueBinding="{Binding Prescription}" Width="100" 
                          ItemsSource="{Binding RelativeSource={RelativeSource  AncestorType={x:Type Window}}, Path=DataContext.PerscriptionValues}" 
                          SelectedValuePath="Code" DisplayMemberPath="Description"/>
                    <CustomControls:BindableDatagridComboBoxColumn Header="Application" SelectedValueBinding="{Binding Application}" Width="100" 
                          ItemsSource="{Binding RelativeSource={RelativeSource  AncestorType={x:Type Window}}, Path=DataContext.ApplicationValues}" 
                          SelectedValuePath="Code" DisplayMemberPath="Description"/>
                    <CustomControls:BindableDatagridComboBoxColumn Header="InterApp" SelectedValueBinding="{Binding InterApp}" Width="100" 
                          ItemsSource="{Binding RelativeSource={RelativeSource  AncestorType={x:Type Window}}, Path=DataContext.InterApplicationValues}" 
                          SelectedValuePath="Code" DisplayMemberPath="Description"/>
                    <DataGridTextColumn Header="Nbre Lv 30m" Binding="{Binding NbreLv30m}"  Width="100" IsReadOnly="True"/>

                    <CustomControls:BindableDatagridComboBoxColumn Header="Priorité État" SelectedValueBinding="{Binding PrioriteEtat}" Width="100" 
                          ItemsSource="{Binding RelativeSource={RelativeSource  AncestorType={x:Type Window}}, Path=DataContext.PrioriteEtatValues}" 
                          SelectedValuePath="Code" DisplayMemberPath="Description"/>
                    <DataGridTemplateColumn Header="Date Prevision" Width="151">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DatePrevision, StringFormat=yyyy MMM dd tt}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <CustomControls:DatePickerAmpm  x:Name="_previsonDate" SelectedDateTime="{Binding DatePrevision, Mode=TwoWay}" 
                                                               IsEnabled="{Binding DatePrevisionIsEnabled}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Date Overture" Width="151">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DateOuverture, StringFormat=yyyy MMM dd tt}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <CustomControls:DatePickerAmpm  x:Name="_overtureDate" SelectedDateTime="{Binding DateOuverture, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="LuOuv" Binding="{Binding LvOuv30m}" Width="100" />
                    <DataGridTextColumn Header="Remarque"  Width="150" />
                    <DataGridTemplateColumn Header="DateTr" Width="151">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DateTr, StringFormat=yyyy MMM dd tt}" Background="Cyan"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <CustomControls:DatePickerAmpm  x:Name="_dateTr" SelectedDateTime="{Binding DateTr, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="LvTr"  Binding="{Binding LvTr,ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextBlock.Background" Value="Cyan" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="EtatBloc" Binding="{Binding EtatBloc}" IsReadOnly="True" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextBlock.Background" Value="Cyan" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</Window>
